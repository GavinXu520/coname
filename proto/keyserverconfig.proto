// Copyright 2014-2015 The Dename Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not
// use this file except in compliance with the License. You may obtain a copy of
// the License at
//
// 	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
// License for the specific language governing permissions and limitations under
// the License.

syntax = "proto3";
package proto;
import "gogoproto/gogo.proto";
import "tlsconfig.proto";
import "duration.proto";

message ReplicaConfig {
	KeyserverConfig keyserver_config = 1 [(gogoproto.embed) = true, (gogoproto.nullable) = false];

	uint64 replica_id = 2 [(gogoproto.customname) = "ReplicaID"];
	string signing_key_id = 3 [(gogoproto.customname) = "SigningKeyID"];

	// server-side listening
	string update_addr = 4;
	TLSConfig update_tls = 5 [(gogoproto.customname) = "UpdateTLS"];
	string lookup_addr = 6;
	TLSConfig lookup_tls = 7 [(gogoproto.customname) = "LookupTLS"];
	string verifier_addr = 8;
	TLSConfig verifier_tls = 9 [(gogoproto.customname) = "VerifierTLS"];
}

message KeyserverConfig {
	uint64 server_id = 1 [(gogoproto.customname) = "ServerID"];
	string realm = 2;
	string vrf_key_id = 3 [(gogoproto.customname) = "VRFKeyID"];

	Duration min_epoch_interval = 4 [(gogoproto.nullable) = false];
	Duration max_epoch_interval = 5 [(gogoproto.nullable) = false];
	Duration proposal_retry_interval = 6 [(gogoproto.nullable) = false];
}

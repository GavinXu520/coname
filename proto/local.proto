// Copyright 2014-2015 The Dename Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not
// use this file except in compliance with the License. You may obtain a copy of
// the License at
//
// 	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
// License for the specific language governing permissions and limitations under
// the License.

syntax = "proto3";
package proto;
import "gogoproto/gogo.proto";
import "replication.proto";
option (gogoproto.goproto_stringer_all) = false;
option (gogoproto.gostring_all) = true;
option (gogoproto.stringer_all) = true;
option (gogoproto.goproto_getters_all) = false;

// ReplicaState contains the persistent internal state of a single replica.
message ReplicaState {
	uint64 next_index_log = 1; // index of the next replicated state machine input to be processed
	uint64 next_index_verifier = 2; // index for the next RSM input to be given to verifiers
	bytes previous_summary_hash = 3;
	EpochDelimiter last_epoch_delimiter = 4 [(gogoproto.nullable) = false];
	bool pending_updates = 5; // are there any updates after the last epoch delimiter?
	// NOTE: this definition is incomplete and subject to change as implementation progresses
}

// Verifier contains the persistent internal state of a verifier.
message VerifierState {
	uint64 next_index = 1;
	uint64 next_epoch = 2;
	bytes previous_summary_hash = 3;
}
